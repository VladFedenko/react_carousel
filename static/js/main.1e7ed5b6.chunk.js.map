{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","infinite","useState","itemSize","frameWidth","stepMove","animationMove","inputs","setInputs","position","setPosition","infnt","setInfnt","lastStep","length","changeAnimation","evnt","target","name","value","prevInputs","className","style","width","transition","map","image","transform","src","alt","slice","type","disabled","onClick","min","max","onChange","checked","App","state","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1e7ed5b6.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean\n};\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n  infinite,\n}) => {\n  const [inputs, setInputs] = useState({\n    itemSize: itemWidth,\n    frameWidth: frameSize,\n    stepMove: step,\n    animationMove: animationDuration,\n  });\n  const [position, setPosition] = useState(0);\n  const [infnt, setInfnt] = useState(infinite);\n  const lastStep = (inputs.frameWidth - images.length) * inputs.itemSize;\n\n  function changeAnimation(evnt: React.ChangeEvent<HTMLInputElement>) {\n    const { name, value } = evnt.target;\n\n    setInputs(prevInputs => ({ ...prevInputs, [name]: +value }));\n  }\n\n  function changeInfinite(evnt: React.ChangeEvent<HTMLInputElement>) {\n    setInfnt(evnt.target.checked);\n  }\n\n  function nextStep() {\n    if (infnt && position === lastStep) {\n      setPosition(0);\n    } else if (position - inputs.itemSize * inputs.stepMove < lastStep) {\n      setPosition(lastStep);\n    } else {\n      setPosition(position - inputs.itemSize * inputs.stepMove);\n    }\n  }\n\n  function prevStep() {\n    if (infnt && position === 0) {\n      setPosition(lastStep);\n    } else if (position + inputs.itemSize * inputs.stepMove > 0) {\n      setPosition(0);\n    } else {\n      setPosition(position + inputs.itemSize * inputs.stepMove);\n    }\n  }\n\n  return (\n    <div className=\"Carousel\">\n      <ul\n        className=\"Carousel__list\"\n        style={\n          {\n            width: inputs.frameWidth * inputs.itemSize,\n            transition: `${inputs.animationMove}ms`,\n          }\n        }\n      >\n        {images.map(image => (\n          <li\n            key={image.slice(6).slice(0, -4)}\n            style={\n              {\n                transform: `translateX(${position}px)`,\n                transition: `${inputs.animationMove}ms`,\n              }\n            }\n          >\n            <img\n              style={{ width: inputs.itemSize }}\n              src={image}\n              alt={image.slice(6).slice(0, -4)}\n            />\n          </li>\n        ))}\n      </ul>\n\n      <div\n        className=\"Buttons\"\n        style={\n          {\n            width: inputs.frameWidth * inputs.itemSize,\n            transition: `${inputs.animationMove}ms`,\n          }\n        }\n      >\n        <button\n          type=\"button\"\n          className=\"Buttons__button\"\n          disabled={position === 0 && !infnt}\n          onClick={prevStep}\n        >\n          Prev\n        </button>\n        <button\n          type=\"button\"\n          className=\"Buttons__button\"\n          disabled={position <= lastStep && !infnt}\n          onClick={nextStep}\n        >\n          Next\n        </button>\n      </div>\n      <div className=\"Inputs\">\n        <label>\n          Item Width\n          <input\n            className=\"Carousel__input\"\n            name=\"itemSize\"\n            value={inputs.itemSize}\n            type=\"number\"\n            step=\"10\"\n            min={130}\n            max={500}\n            onChange={changeAnimation}\n          />\n        </label>\n\n        <label>\n          Frame size\n          <input\n            name=\"frameWidth\"\n            className=\"Carousel__input\"\n            value={inputs.frameWidth}\n            type=\"number\"\n            step=\"1\"\n            min={1}\n            max={10}\n            onChange={changeAnimation}\n          />\n        </label>\n\n        <label>\n          Step\n          <input\n            name=\"stepMove\"\n            className=\"Carousel__input\"\n            value={inputs.stepMove}\n            type=\"number\"\n            step=\"1\"\n            min={1}\n            max={10}\n            onChange={changeAnimation}\n          />\n        </label>\n\n        <label>\n          AnimationDuration\n          <input\n            name=\"animationMove\"\n            className=\"Carousel__input\"\n            value={inputs.animationMove}\n            type=\"number\"\n            step=\"500\"\n            min={500}\n            max={5000}\n            onChange={changeAnimation}\n          />\n        </label>\n\n        <label>\n          Infinite\n          <input\n            name=\"fnimationDuration\"\n            type=\"checkbox\"\n            onChange={changeInfinite}\n          />\n        </label>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1>Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={this.state.images}\n          step={3}\n          frameSize={3}\n          itemWidth={130}\n          animationDuration={1000}\n          infinite={false}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}